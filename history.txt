- Install Laravel 10
  $ composer create-project "laravel/laravel:^10.0" NewsPortal

- Configure Hosts

- Create database and configure .env

- Check database connection
  $ php artisan db:monitor

- Install Laravel Breeze
  $ composer require laravel/breeze --dev
  $ php artisan breeze:install
  $ php artisan migrate
  $ npm install
  $ npm run dev

- Configure vite.config.js if using Docker
  server: {
      host: '0.0.0.0',
      port: 5173,
      strictPort: true,
      cors: {
          origin: ['http://custom.domain.org'],
      },
      hmr: {
          host: 'custom.domain.org',
          protocol: 'ws',
      },
      headers: {
          'Access-Control-Allow-Origin': '*',
      },
  },
- Modify .env
  APP_URL=http://custom.domain.org

- Run
  $ npm run dev

- Setup Global Layout for Admin with Stisla Admin Template

# Multi Auth System with Breeze
- Create admin.php in routes folder
- Register admin.php to RouteServiceProvider.php
- Create Admin model with migration
  $ php artisan make:model Admin -m
- Modify create_admins_table.php then migrate
  $ php artisan migrate
- Modify Admin.php models
- Modify auth.php config
- Create AdminAuthenticationController
  $ php artisan make:controller Admin/AdminAuthenticationController
- Modify AdminAuthenticationController.php
- Create login view for Admin (admin/auth/login.blade.php)
- Modify admin.php routes
- Create Admin middleware
  $ php artisan make:middleware Admin
- Modify Admin.php middleware
- Modify Kernel.php
- Create DashboardController for Admin
  $ php artisan make:controller Admin/DashboardController
- Modify DashboardController.php
- Create AdminSeeder
  $ php artisan make:seeder AdminSeeder
- Modify AdminSeeder and run seeder
  $ php artisan db:seed --class=AdminSeeder
- Create Admin LoginRequest
  $ php artisan make:request Admin/LoginRequest
- Modify Admin LoginRequest
- Modify navbar to insert logout function

# Password Reset System for Admin
- Create guest layout and modify login view
- Create forgot password view
- Modify admin.php routes
- Modify AdminAuthenticationController.php
- Create Admin ForgotPasswordRequest
  $ php artisan make:request Admin/ForgotPasswordRequest
- Modify Admin ForgotPasswordRequest
- Create Admin ResetPasswordMail
  $ php artisan make:mail Admin/ResetPasswordMail
- Create send reset password view and modify with email template
- Register Mailtrap to test email and set .env
- Create Admin ResetPasswordRequest
  $ php artisan make:request Admin/ResetPasswordRequest
- Modify Admin ResetPasswordRequest
- Create reset password view

# Redis Integration
- Modify .env
  CACHE_DRIVER=redis
  QUEUE_CONNECTION=redis
  SESSION_DRIVER=redis
  REDIS_HOST=redis (Docker Container)
  REDIS_PASSWORD=null (Set Redis Password)
  REDIS_PORT=6379
- Check Redis Connection
  $ php artisan tinker
  > Cache::put('test', 'redis-works', 10);
  > Cache::get('test');
  $ "redis-works" (Output)

# Localization Syntax in All Static Text
- Publishing the language files
  $ php artisan lang:publish
- Modify all static text

# Manage Profile
- Create Traits for handle file uploads (app/Traits/FileUploadTrait.php)
- Modify FileUploadTrait
- Create resource ProfileController
  $ php artisan:make Admin/ProfileController -r
- Modify ProfileController
- Modify admin.php routes
- Create Admin ProfileUpdateRequest
  $ php artisan make:request Admin/ProfileUpdateRequest
- Modify Admin ProfileUpdateRequest
- Create Admin PasswordUpdateRequest
  $ php artisan make:request Admin/PasswordUpdateRequest
- Modify Admin PasswordUpdateRequest
- Create and modify Admin Profile view

# SweetAlert Integration
- Installation
  $ composer require realrashid/sweet-alert
- Include SweetAlert view layouts
  @include('sweetalert::alert')
- Publish the package assets
  $ php artisan sweetalert:publish

# Setup Global Layout for Frontend
- Create Frontend layout view
- Create Frontend Home view
- Create Frontend HomeController
  $ php artisan make:controller Frontend/HomeController
- Modify web.php routes

# Setup Multi-Language
- Create language config (config/language.php)
- Modify navbar on Admin view
- Create Admin LanguageController with resource
  $ php artisan make:controller Admin/LanguageController -r
- Create Language model with migration
  $ php artisan make:model Language -m
- Modify create_language_table.php then migrate
  $ php artisan migrate
- Modify Admin LanguageController
- Create Admin LanguageStoreRequest
  $ php artisan make:request Admin/LanguageStoreRequest
- Modify Admin LanguageStoreRequest
- Create Admin LanguageUpdateRequest
  $ php artisan make:request Admin/LanguageUpdateRequest
- Modify Admin LanguageUpdateRequest
- Create LanguageSeeder
  $ php artisan make:seeder LanguageSeeder
- Modify LanguageSeeder and run seeder
  $ php artisan db:seed --class=LanguageSeeder
- Create Admin Language view (Index, Create, Edit)

# Manage Categories
- Modify navbar on Admin view
- Create Admin CategoryController with resource
  $ php artisan make:controller Admin/CategoryController -r
- Create Category model with migration
  $ php artisan make:model Category -m
- Modify create_category_table.php then migrate
  $ php artisan migrate
- Create Admin CategoryStoreRequest
  $ php artisan make:request Admin/CategoryStoreRequest
- Modify Admin CategoryStoreRequest
- Create Admin CategoryUpdateRequest
  $ php artisan make:request Admin/CategoryUpdateRequest
- Modify Admin CategoryUpdateRequest
- Modify admin.php routes
- Create Admin Categories view (Index, Create, Edit)

# Manage News
- Modify navbar on Admin view
- Create Traits for handle uniq title and slug (app/Traits/UniqueTitleSlugTrait.php)
- Modify UniqueTitleSlugTrait
- Create Admin NewsController with resource
  $ php artisan make:controller Admin/NewsController -r
- Create News model with migration
  $ php artisan make:model News -m
- Modify create_news_table.php then migrate
  $ php artisan migrate
- Create Tag model with migration
  $ php artisan make:model Tag -m
- Create pivot table between News and Tags table
  $ php artisan make:migration create_news_tags_table
- Modify create_news_tags_table.php
- Modify create_tags_table.php then migrate
  $ php artisan migrate
- Modify News.php and Tag.php models
- Create Helpers function (app/Helpers/helper.php)
- Register Helpers function to composer.json and run command
  $ composer dump-autoload
  or
  $ composer du
- Modify helper.php Helpers
- Modify FileUploadTrait
- Create Admin NewsStoreRequest
  $ php artisan make:request Admin/NewsStoreRequest
- Modify Admin NewsStoreRequest
- Create Admin NewsUpdateRequest
  $ php artisan make:request Admin/NewsUpdateRequest
- Modify Admin NewsUpdateRequest
- Modify admin.php routes
- Create Admin News view (Index, Create, Edit)